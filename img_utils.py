import binascii
import os
import cv2
import math
import numpy as np
from PIL import Image


def bin_to_img(bin_path, img_path):
    """
    Convert a binary file to a grayscale image.
    """
    # create the image
    with open(bin_path, 'rb') as f:
        bin_data = f.read()
    hex_data = binascii.hexlify(bin_data)
    img = [int(hex_data[i: i + 2], 16) for i in range(0, len(hex_data), 2)]
    img = np.array(img, dtype=np.uint8)

    # reshape the image from 1D to 2D
    height = int(math.sqrt(len(img)))
    width = int(len(img) / height)
    img = img[:height * width].reshape(height, width)

    # save the image
    img = Image.fromarray(img)
    img.save(img_path)


def create_images(bin_root_dir, img_root_dir=None):
    if img_root_dir is None:
        img_root_dir = './images'
    if not os.path.exists(img_root_dir):
        os.mkdir(img_root_dir)

    categories = os.listdir(bin_root_dir)
    for category in categories:
        bin_cat_dir = os.path.join(bin_root_dir, category)
        img_cat_dir = os.path.join(img_root_dir, category)
        if not os.path.exists(img_cat_dir):
            os.mkdir(img_cat_dir)
        img_cnt = 0
        for bin_file in os.listdir(bin_cat_dir):
            bin_path = os.path.join(bin_cat_dir, bin_file)
            img_path = os.path.join(img_cat_dir, str(img_cnt).zfill(4) + '.jpg')
            bin_to_img(bin_path, img_path)
            img_cnt += 1


def test():
    create_images('./data')


if __name__ == '__main__':
    test()
