import os
import random
import matplotlib.pyplot as plt
import numpy as np
import torch


def set_seed(seed):
    random.seed(seed)
    np.random.seed(seed)
    torch.manual_seed(seed)
    torch.backends.cudnn.deterministic = True
    torch.backends.cudnn.benchmark = True


def plot_loss_history(train_loss_history, valid_loss_history, title):
    fig, ax = plt.subplots()
    ax.set_xlabel('epochs')
    ax.set_ylabel('loss')
    ax.grid(linestyle='--')
    ax.plot(range(len(train_loss_history)), train_loss_history, color='b', label='train loss')
    ax.plot(range(len(valid_loss_history)), valid_loss_history, color='r', label='valid loss')
    ax.legend(loc='best')
    fig.savefig(os.path.join('results', 'images', f'{title}_loss_history.jpg'))
    plt.close(fig)


def plot_accu_history(train_accu_history, valid_accu_history, title):
    fig, ax = plt.subplots()
    ax.set_xlabel('epochs')
    ax.set_ylabel('accuracy')
    ax.grid(linestyle='--')
    ax.plot(range(len(train_accu_history)), train_accu_history, color='b', label='train accuracy')
    ax.plot(range(len(valid_accu_history)), valid_accu_history, color='r', label='valid accuracy')
    ax.legend(loc='best')
    fig.savefig(os.path.join('results', 'images', f'{title}_accu_history.jpg'))
    plt.close(fig)
